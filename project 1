#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Macros
#define MAX_CONTACTS 100
#define NAME_LEN 50
#define PHONE_LEN 15
#define FILE_NAME "contacts.txt"

// Struct for Contact
typedef struct {
    char name[NAME_LEN];
    char phone[PHONE_LEN];
} Contact;

// Global Variables
Contact contacts[MAX_CONTACTS];
int contact_count = 0;

// Function Declarations
void loadContacts();
void saveContacts();
void addContact();
void viewContacts();
void searchContact();
void deleteContact();
void updateContact();
void displayMenu();
void clearScreen();

// Main Function
int main() {
    int choice;

    loadContacts();
    do {
        displayMenu();
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addContact();
                break;
            case 2:
                viewContacts();
                break;
            case 3:
                searchContact();
                break;
            case 4:
                deleteContact();
                break;
            case 5:
                updateContact();
                break;
            case 0:
                saveContacts();
                printf("Exiting... Contacts saved.\n");
                break;
            default:
                printf("Invalid choice! Try again.\n");
        }
    } while (choice != 0);

    return 0;
}

// Load contacts from file
void loadContacts() {
    FILE *file = fopen(FILE_NAME, "r");
    if (!file) {
        printf("No existing contact file found. Starting fresh.\n");
        return;
    }
    while (fscanf(file, "%49s %14s", contacts[contact_count].name, contacts[contact_count].phone) != EOF) {
        contact_count++;
    }
    fclose(file);
}

// Save contacts to file
void saveContacts() {
    FILE *file = fopen(FILE_NAME, "w");
    if (!file) {
        printf("Error saving contacts.\n");
        return;
    }
    for (int i = 0; i < contact_count; i++) {
        fprintf(file, "%s %s\n", contacts[i].name, contacts[i].phone);
    }
    fclose(file);
}

// Add a new contact
void addContact() {
    if (contact_count >= MAX_CONTACTS) {
        printf("Contact list is full!\n");
        return;
    }

    printf("Enter name: ");
    scanf("%s", contacts[contact_count].name);
    printf("Enter phone number: ");
    scanf("%s", contacts[contact_count].phone);

    contact_count++;
    printf("Contact added successfully!\n");
}

// View all contacts
void viewContacts() {
    if (contact_count == 0) {
        printf("No contacts to display.\n");
        return;
    }

    printf("\n--- Contact List ---\n");
    for (int i = 0; i < contact_count; i++) {
        printf("%d. %s - %s\n", i + 1, contacts[i].name, contacts[i].phone);
    }
}

// Search for a contact
void searchContact() {
    char search_name[NAME_LEN];
    printf("Enter name to search: ");
    scanf("%s", search_name);

    int found = 0;
    for (int i = 0; i < contact_count; i++) {
        if (strcmp(contacts[i].name, search_name) == 0) {
            printf("Found: %s - %s\n", contacts[i].name, contacts[i].phone);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Contact not found.\n");
    }
}

// Delete a contact
void deleteContact() {
    char delete_name[NAME_LEN];
    printf("Enter name to delete: ");
    scanf("%s", delete_name);

    int found = 0;
    for (int i = 0; i < contact_count; i++) {
        if (strcmp(contacts[i].name, delete_name) == 0) {
            found = 1;
            for (int j = i; j < contact_count - 1; j++) {
                contacts[j] = contacts[j + 1];
            }
            contact_count--;
            printf("Contact deleted successfully.\n");
            break;
        }
    }

    if (!found) {
        printf("Contact not found.\n");
    }
}

// Update a contact
void updateContact() {
    char update_name[NAME_LEN];
    printf("Enter name to update: ");
    scanf("%s", update_name);

    int found = 0;
    for (int i = 0; i < contact_count; i++) {
        if (strcmp(contacts[i].name, update_name) == 0) {
            found = 1;
            printf("Enter new name: ");
            scanf("%s", contacts[i].name);
            printf("Enter new phone number: ");
            scanf("%s", contacts[i].phone);
            printf("Contact updated successfully.\n");
            break;
        }
    }

    if (!found) {
        printf("Contact not found.\n");
    }
}

// Display menu
void displayMenu() {
    clearScreen();
    printf("\n--- Contact Management System ---\n");
    printf("1. Add Contact\n");
    printf("2. View Contacts\n");
    printf("3. Search Contact\n");
    printf("4. Delete Contact\n");
    printf("5. Update Contact\n");
    printf("0. Exit\n");
}

// Clear screen (platform dependent)
void clearScreen() {
#ifdef _WIN32
    system("cls");
#else
    system("clear");
#endif
}
